{
  "identifier": "enginelocaltimezone",
  "accessKey": "Q2FFZVBlc3l1eVZ4VmplakRVbWY=",
  "hostName": "hmg-tcp.msging.net",
  "port": 443,
  "messageReceivers": [
    {
      "type": "BuilderMessageReceiver"
    }
  ],
  "notificationReceivers": [
    {
      "type": "BuilderDeskNotificationReceiver"
    }
  ],
  "serviceProviderType": "BuilderServiceProvider",
  "settings": {
    "flow": {
      "id": "b8f3a028-3764-488a-b646-df2fe02821da",
      "states": [
        {
          "id": "onboarding",
          "root": true,
          "name": "Start",
          "inputActions": [

          ],
          "input": {
            "bypass": false
          },
          "outputActions": [

          ],
          "outputs": [
            {
              "stateId": "welcome",
              "conditions": [
                {
                  "source": "input",
                  "comparison": "matches",
                  "values": [
                    ".*"
                  ]
                }
              ]
            },
            {
              "stateId": "fallback"
            }
          ]
        },
        {
          "id": "fallback",
          "name": "Exceptions",
          "inputActions": [

          ],
          "input": {
            "bypass": true
          },
          "outputActions": [

          ],
          "outputs": [
            {
              "stateId": "error",
              "conditions": [
                {
                  "source": "input",
                  "comparison": "matches",
                  "values": [
                    ".*"
                  ]
                }
              ]
            },
            {
              "stateId": "onboarding"
            }
          ]
        },
        {
          "id": "welcome",
          "name": "Welcome",
          "inputActions": [
            {
              "type": "ExecuteScript",
              "settings": {
                "function": "run",
                "source": "/**\n            * All input variables needs to be passed as function param;\n            * Objects received as param needs to be parsed. Ex.: JSON.parse(inputVariable1);\n            * Objects returned needs to be stringfied. Ex.: JSON.stringify(inputVariable1);\n            **/\n            function run(datetime) {\n                let date = new Date();\n                return {\n                    \"getHours\": date.getHours(),\n                    \"calendar\": datetime,\n                    \"date\": date\n                };\n            }",
                "inputVariables": [
                  "calendar.datetime"
                ],
                "outputVariable": "torta",
                "LocalTimeZoneEnabled": true
              },
              "conditions": [

              ]
            },
            {
              "type": "SendMessage",
              "settings": {
                "id": "00000000-0000-0000-0000-000000000000",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                },
                "metadata": {
                  "#stateName": "{{state.name}}",
                  "#stateId": "{{state.id}}",
                  "#messageId": "{{input.message@id}}",
                  "#previousStateId": "{{state.previous.id}}",
                  "#previousStateName": "{{state.previous.name}}"
                }
              }
            },
            {
              "type": "SendMessage",
              "settings": {
                "id": "00000000-0000-0000-0000-000000000001",
                "type": "text/plain",
                "content": "Olá! {{contact.name}}!\nSeja bem-vindo(a)!",
                "metadata": {
                  "#stateName": "{{state.name}}",
                  "#stateId": "{{state.id}}",
                  "#messageId": "{{input.message@id}}",
                  "#previousStateId": "{{state.previous.id}}",
                  "#previousStateName": "{{state.previous.name}}"
                }
              }
            }
          ],
          "input": {
            "bypass": false
          },
          "outputActions": [

          ],
          "outputs": [
            {
              "stateId": "b5b7a00f-7c43-4339-bc23-184ccc546318",
              "conditions": [
                {
                  "source": "input",
                  "comparison": "exists",
                  "values": [

                  ]
                }
              ]
            },
            {
              "stateId": "fallback"
            }
          ]
        },
        {
          "id": "error",
          "name": "Default error",
          "inputActions": [
            {
              "type": "SendMessage",
              "settings": {
                "id": "00000000-0000-0000-0000-000000000002",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                },
                "metadata": {
                  "#stateName": "{{state.name}}",
                  "#stateId": "{{state.id}}",
                  "#messageId": "{{input.message@id}}",
                  "#previousStateId": "{{state.previous.id}}",
                  "#previousStateName": "{{state.previous.name}}"
                }
              }
            },
            {
              "type": "SendMessage",
              "settings": {
                "id": "00000000-0000-0000-0000-000000000003",
                "type": "text/plain",
                "content": "Desculpe, não consegui entender!",
                "metadata": {
                  "#stateName": "{{state.name}}",
                  "#stateId": "{{state.id}}",
                  "#messageId": "{{input.message@id}}",
                  "#previousStateId": "{{state.previous.id}}",
                  "#previousStateName": "{{state.previous.name}}"
                }
              }
            }
          ],
          "input": {
            "bypass": true
          },
          "outputActions": [

          ],
          "outputs": [
            {
              "stateId": "onboarding"
            }
          ]
        },
        {
          "id": "b5b7a00f-7c43-4339-bc23-184ccc546318",
          "root": false,
          "name": "New block",
          "inputActions": [
            {
              "type": "SendMessage",
              "settings": {
                "id": "911f09cd-aeaf-448a-95b9-0174e85d773e",
                "type": "application/vnd.lime.chatstate+json",
                "content": {
                  "state": "composing",
                  "interval": 1000
                },
                "metadata": {
                  "#stateName": "{{state.name}}",
                  "#stateId": "{{state.id}}",
                  "#messageId": "{{input.message@id}}",
                  "#previousStateId": "{{state.previous.id}}",
                  "#previousStateName": "{{state.previous.name}}"
                }
              }
            },
            {
              "type": "SendMessage",
              "settings": {
                "id": "1e61e15a-7120-4fc2-8800-eece9fd9aae4",
                "type": "text/plain",
                "content": "{{torta}}",
                "metadata": {
                  "#stateName": "{{state.name}}",
                  "#stateId": "{{state.id}}",
                  "#messageId": "{{input.message@id}}",
                  "#previousStateId": "{{state.previous.id}}",
                  "#previousStateName": "{{state.previous.name}}"
                }
              }
            }
          ],
          "input": {
            "bypass": false
          },
          "outputActions": [

          ],
          "outputs": [
            {
              "stateId": "fallback"
            }
          ]
        }
      ],
      "configuration": {
        "builder:minimumIntentScore": "0.5",
        "builder:stateTrack": "false",
        "builder:#localTimeZone": "Hawaiian Standard Time"
      },
      "inputActions": [

      ],
      "outputActions": [

      ]
    }
  },
  "settingsType": "BuilderSettings"
}